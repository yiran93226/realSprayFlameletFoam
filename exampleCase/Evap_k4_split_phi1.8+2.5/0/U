/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "0";
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform (1 0 0); 

boundaryField
{
    AXIS
    {
        type            empty;
    }
    OUTLET
    {
	type            pressureInletOutletVelocity;
        value           $internalField;
        /*type            inletOutlet;
        inletValue      uniform (0 0 0);
        value           uniform (0 0 0); */
    }
    COFLOW
    {
        type            fixedValue;
        value           uniform (4.5 0 0);
    }
    PILOT
    {
        type            fixedValue;
        value           uniform (11.5 0 0);
    }
    FUEL
    {
        type            fixedValueProfile;
        valueProfile    csvFile;
        
        valueProfileCoeffs
        {
            nHeaderLine         0;          // number of header lines
            refColumn           0;          // reference column index
            componentColumns    (1 2 3);    // component column indices
            separator           ",";        // optional (defaults to ",")
            mergeSeparators     no;         // merge multiple separators
	    file                "0/velocityProfile.csv";            
	    outOfBounds         clamp;      // optional out-of-bounds handling
            interpolationScheme linear;     // optional interpolation scheme
        }
        direction        (0 1 0);
        refPoint         (0 0 0);
    }
    WALL
    {
	//type 		zeroGradient;
	type 		noSlip;             
	/*type            fixedValue;
	value           uniform (0 0 0);*/
    }
    front
    {
        type            wedge;
    }
    back
    {
        type            wedge;
    }
}


// ************************************************************************* //
